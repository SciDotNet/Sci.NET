// Copyright (c) Sci.NET Foundation. All rights reserved.
// Licensed under the Apache 2.0 license. See LICENSE file in the project root for full license information.

using System.Reflection.Emit;
using System.CodeDom.Compiler;

namespace Sci.NET.Accelerators.Disassembly;

// ReSharper disable ArrangeTrailingCommaInMultilineLists
#pragma warning disable RCS1035

/// <summary>
/// Provides a list of IL instructions.
/// </summary>
[PublicAPI, GeneratedCode("TextTemplatingFileGenerator", "2.x")]
public static class IlInstructionProvider
{
    private static readonly OpCode[] OneByteOpCodes = new OpCode[]
    {
        OpCodes.Nop,
        OpCodes.Break,
        OpCodes.Ldarg_0,
        OpCodes.Ldarg_1,
        OpCodes.Ldarg_2,
        OpCodes.Ldarg_3,
        OpCodes.Ldloc_0,
        OpCodes.Ldloc_1,
        OpCodes.Ldloc_2,
        OpCodes.Ldloc_3,
        OpCodes.Stloc_0,
        OpCodes.Stloc_1,
        OpCodes.Stloc_2,
        OpCodes.Stloc_3,
        OpCodes.Ldarg_S,
        OpCodes.Ldarga_S,
        OpCodes.Starg_S,
        OpCodes.Ldloc_S,
        OpCodes.Ldloca_S,
        OpCodes.Stloc_S,
        OpCodes.Ldnull,
        OpCodes.Ldc_I4_M1,
        OpCodes.Ldc_I4_0,
        OpCodes.Ldc_I4_1,
        OpCodes.Ldc_I4_2,
        OpCodes.Ldc_I4_3,
        OpCodes.Ldc_I4_4,
        OpCodes.Ldc_I4_5,
        OpCodes.Ldc_I4_6,
        OpCodes.Ldc_I4_7,
        OpCodes.Ldc_I4_8,
        OpCodes.Ldc_I4_S,
        OpCodes.Ldc_I4,
        OpCodes.Ldc_I8,
        OpCodes.Ldc_R4,
        OpCodes.Ldc_R8,
        OpCodes.Nop,
        OpCodes.Dup,
        OpCodes.Pop,
        OpCodes.Jmp,
        OpCodes.Call,
        OpCodes.Calli,
        OpCodes.Ret,
        OpCodes.Br_S,
        OpCodes.Brfalse_S,
        OpCodes.Brtrue_S,
        OpCodes.Beq_S,
        OpCodes.Bge_S,
        OpCodes.Bgt_S,
        OpCodes.Ble_S,
        OpCodes.Blt_S,
        OpCodes.Bne_Un_S,
        OpCodes.Bge_Un_S,
        OpCodes.Bgt_Un_S,
        OpCodes.Ble_Un_S,
        OpCodes.Blt_Un_S,
        OpCodes.Br,
        OpCodes.Brfalse,
        OpCodes.Brtrue,
        OpCodes.Beq,
        OpCodes.Bge,
        OpCodes.Bgt,
        OpCodes.Ble,
        OpCodes.Blt,
        OpCodes.Bne_Un,
        OpCodes.Bge_Un,
        OpCodes.Bgt_Un,
        OpCodes.Ble_Un,
        OpCodes.Blt_Un,
        OpCodes.Switch,
        OpCodes.Ldind_I1,
        OpCodes.Ldind_U1,
        OpCodes.Ldind_I2,
        OpCodes.Ldind_U2,
        OpCodes.Ldind_I4,
        OpCodes.Ldind_U4,
        OpCodes.Ldind_I8,
        OpCodes.Ldind_I,
        OpCodes.Ldind_R4,
        OpCodes.Ldind_R8,
        OpCodes.Ldind_Ref,
        OpCodes.Stind_Ref,
        OpCodes.Stind_I1,
        OpCodes.Stind_I2,
        OpCodes.Stind_I4,
        OpCodes.Stind_I8,
        OpCodes.Stind_R4,
        OpCodes.Stind_R8,
        OpCodes.Add,
        OpCodes.Sub,
        OpCodes.Mul,
        OpCodes.Div,
        OpCodes.Div_Un,
        OpCodes.Rem,
        OpCodes.Rem_Un,
        OpCodes.And,
        OpCodes.Or,
        OpCodes.Xor,
        OpCodes.Shl,
        OpCodes.Shr,
        OpCodes.Shr_Un,
        OpCodes.Neg,
        OpCodes.Not,
        OpCodes.Conv_I1,
        OpCodes.Conv_I2,
        OpCodes.Conv_I4,
        OpCodes.Conv_I8,
        OpCodes.Conv_R4,
        OpCodes.Conv_R8,
        OpCodes.Conv_U4,
        OpCodes.Conv_U8,
        OpCodes.Callvirt,
        OpCodes.Cpobj,
        OpCodes.Ldobj,
        OpCodes.Ldstr,
        OpCodes.Newobj,
        OpCodes.Castclass,
        OpCodes.Isinst,
        OpCodes.Conv_R_Un,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Unbox,
        OpCodes.Throw,
        OpCodes.Ldfld,
        OpCodes.Ldflda,
        OpCodes.Stfld,
        OpCodes.Ldsfld,
        OpCodes.Ldsflda,
        OpCodes.Stsfld,
        OpCodes.Stobj,
        OpCodes.Conv_Ovf_I1_Un,
        OpCodes.Conv_Ovf_I2_Un,
        OpCodes.Conv_Ovf_I4_Un,
        OpCodes.Conv_Ovf_I8_Un,
        OpCodes.Conv_Ovf_U1_Un,
        OpCodes.Conv_Ovf_U2_Un,
        OpCodes.Conv_Ovf_U4_Un,
        OpCodes.Conv_Ovf_U8_Un,
        OpCodes.Conv_Ovf_I_Un,
        OpCodes.Conv_Ovf_U_Un,
        OpCodes.Box,
        OpCodes.Newarr,
        OpCodes.Ldlen,
        OpCodes.Ldelema,
        OpCodes.Ldelem_I1,
        OpCodes.Ldelem_U1,
        OpCodes.Ldelem_I2,
        OpCodes.Ldelem_U2,
        OpCodes.Ldelem_I4,
        OpCodes.Ldelem_U4,
        OpCodes.Ldelem_I8,
        OpCodes.Ldelem_I,
        OpCodes.Ldelem_R4,
        OpCodes.Ldelem_R8,
        OpCodes.Ldelem_Ref,
        OpCodes.Stelem_I,
        OpCodes.Stelem_I1,
        OpCodes.Stelem_I2,
        OpCodes.Stelem_I4,
        OpCodes.Stelem_I8,
        OpCodes.Stelem_R4,
        OpCodes.Stelem_R8,
        OpCodes.Stelem_Ref,
        OpCodes.Ldelem,
        OpCodes.Stelem,
        OpCodes.Unbox_Any,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Conv_Ovf_I1,
        OpCodes.Conv_Ovf_U1,
        OpCodes.Conv_Ovf_I2,
        OpCodes.Conv_Ovf_U2,
        OpCodes.Conv_Ovf_I4,
        OpCodes.Conv_Ovf_U4,
        OpCodes.Conv_Ovf_I8,
        OpCodes.Conv_Ovf_U8,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Refanyval,
        OpCodes.Ckfinite,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Mkrefany,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Ldtoken,
        OpCodes.Conv_U2,
        OpCodes.Conv_U1,
        OpCodes.Conv_I,
        OpCodes.Conv_Ovf_I,
        OpCodes.Conv_Ovf_U,
        OpCodes.Add_Ovf,
        OpCodes.Add_Ovf_Un,
        OpCodes.Mul_Ovf,
        OpCodes.Mul_Ovf_Un,
        OpCodes.Sub_Ovf,
        OpCodes.Sub_Ovf_Un,
        OpCodes.Endfinally,
        OpCodes.Leave,
        OpCodes.Leave_S,
        OpCodes.Stind_I,
        OpCodes.Conv_U,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Prefix7,
        OpCodes.Prefix6,
        OpCodes.Prefix5,
        OpCodes.Prefix4,
        OpCodes.Prefix3,
        OpCodes.Prefix2,
        OpCodes.Prefix1,
        OpCodes.Prefixref,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
    };

    private static readonly OpCode[] TwoByteOpCodes = new OpCode[]
    {
        OpCodes.Arglist,
        OpCodes.Ceq,
        OpCodes.Cgt,
        OpCodes.Cgt_Un,
        OpCodes.Clt,
        OpCodes.Clt_Un,
        OpCodes.Ldftn,
        OpCodes.Ldvirtftn,
        OpCodes.Nop,
        OpCodes.Ldarg,
        OpCodes.Ldarga,
        OpCodes.Starg,
        OpCodes.Ldloc,
        OpCodes.Ldloca,
        OpCodes.Stloc,
        OpCodes.Localloc,
        OpCodes.Nop,
        OpCodes.Endfilter,
        OpCodes.Unaligned,
        OpCodes.Volatile,
        OpCodes.Tailcall,
        OpCodes.Initobj,
        OpCodes.Constrained,
        OpCodes.Cpblk,
        OpCodes.Initblk,
        OpCodes.Nop,
        OpCodes.Rethrow,
        OpCodes.Nop,
        OpCodes.Sizeof,
        OpCodes.Refanytype,
        OpCodes.Readonly,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
        OpCodes.Nop,
    };

    /// <summary>
    /// Gets the opcode for the given value.
    /// </summary>
    /// <param name="opCode">The opcode value.</param>
    /// <returns>The opcode.</returns>
    public static OpCode GetOneByteOpCode(int opCode)
    {
        return OneByteOpCodes.Length > opCode ? OneByteOpCodes[opCode] : default;
    }

    /// <summary>
    /// Gets the opcode for the given value.
    /// </summary>
    /// <param name="opCode">The opcode value.</param>
    /// <returns>The opcode.</returns>
    public static OpCode GetTwoByteOpCode(int opCode)
    {
        return TwoByteOpCodes.Length > opCode ? TwoByteOpCodes[opCode] : default;
    }
}

// ReSharper disable InconsistentNaming
#pragma warning disable CA1028, CS1591, SA1602, CA1707

/// <summary>
/// Enumerates the IL instruction types.
/// </summary>
[PublicAPI, GeneratedCode("TextTemplatingFileGenerator", "2.x")]
public enum OpCodeTypes : ushort
{
    Nop = 0x0000,
    Break = 0x0001,
    Ldarg_0 = 0x0002,
    Ldarg_1 = 0x0003,
    Ldarg_2 = 0x0004,
    Ldarg_3 = 0x0005,
    Ldloc_0 = 0x0006,
    Ldloc_1 = 0x0007,
    Ldloc_2 = 0x0008,
    Ldloc_3 = 0x0009,
    Stloc_0 = 0x000a,
    Stloc_1 = 0x000b,
    Stloc_2 = 0x000c,
    Stloc_3 = 0x000d,
    Ldarg_S = 0x000e,
    Ldarga_S = 0x000f,
    Starg_S = 0x0010,
    Ldloc_S = 0x0011,
    Ldloca_S = 0x0012,
    Stloc_S = 0x0013,
    Ldnull = 0x0014,
    Ldc_I4_M1 = 0x0015,
    Ldc_I4_0 = 0x0016,
    Ldc_I4_1 = 0x0017,
    Ldc_I4_2 = 0x0018,
    Ldc_I4_3 = 0x0019,
    Ldc_I4_4 = 0x001a,
    Ldc_I4_5 = 0x001b,
    Ldc_I4_6 = 0x001c,
    Ldc_I4_7 = 0x001d,
    Ldc_I4_8 = 0x001e,
    Ldc_I4_S = 0x001f,
    Ldc_I4 = 0x0020,
    Ldc_I8 = 0x0021,
    Ldc_R4 = 0x0022,
    Ldc_R8 = 0x0023,
    Dup = 0x0025,
    Pop = 0x0026,
    Jmp = 0x0027,
    Call = 0x0028,
    Calli = 0x0029,
    Ret = 0x002a,
    Br_S = 0x002b,
    Brfalse_S = 0x002c,
    Brtrue_S = 0x002d,
    Beq_S = 0x002e,
    Bge_S = 0x002f,
    Bgt_S = 0x0030,
    Ble_S = 0x0031,
    Blt_S = 0x0032,
    Bne_Un_S = 0x0033,
    Bge_Un_S = 0x0034,
    Bgt_Un_S = 0x0035,
    Ble_Un_S = 0x0036,
    Blt_Un_S = 0x0037,
    Br = 0x0038,
    Brfalse = 0x0039,
    Brtrue = 0x003a,
    Beq = 0x003b,
    Bge = 0x003c,
    Bgt = 0x003d,
    Ble = 0x003e,
    Blt = 0x003f,
    Bne_Un = 0x0040,
    Bge_Un = 0x0041,
    Bgt_Un = 0x0042,
    Ble_Un = 0x0043,
    Blt_Un = 0x0044,
    Switch = 0x0045,
    Ldind_I1 = 0x0046,
    Ldind_U1 = 0x0047,
    Ldind_I2 = 0x0048,
    Ldind_U2 = 0x0049,
    Ldind_I4 = 0x004a,
    Ldind_U4 = 0x004b,
    Ldind_I8 = 0x004c,
    Ldind_I = 0x004d,
    Ldind_R4 = 0x004e,
    Ldind_R8 = 0x004f,
    Ldind_Ref = 0x0050,
    Stind_Ref = 0x0051,
    Stind_I1 = 0x0052,
    Stind_I2 = 0x0053,
    Stind_I4 = 0x0054,
    Stind_I8 = 0x0055,
    Stind_R4 = 0x0056,
    Stind_R8 = 0x0057,
    Add = 0x0058,
    Sub = 0x0059,
    Mul = 0x005a,
    Div = 0x005b,
    Div_Un = 0x005c,
    Rem = 0x005d,
    Rem_Un = 0x005e,
    And = 0x005f,
    Or = 0x0060,
    Xor = 0x0061,
    Shl = 0x0062,
    Shr = 0x0063,
    Shr_Un = 0x0064,
    Neg = 0x0065,
    Not = 0x0066,
    Conv_I1 = 0x0067,
    Conv_I2 = 0x0068,
    Conv_I4 = 0x0069,
    Conv_I8 = 0x006a,
    Conv_R4 = 0x006b,
    Conv_R8 = 0x006c,
    Conv_U4 = 0x006d,
    Conv_U8 = 0x006e,
    Callvirt = 0x006f,
    Cpobj = 0x0070,
    Ldobj = 0x0071,
    Ldstr = 0x0072,
    Newobj = 0x0073,
    Castclass = 0x0074,
    Isinst = 0x0075,
    Conv_R_Un = 0x0076,
    Unbox = 0x0079,
    Throw = 0x007a,
    Ldfld = 0x007b,
    Ldflda = 0x007c,
    Stfld = 0x007d,
    Ldsfld = 0x007e,
    Ldsflda = 0x007f,
    Stsfld = 0x0080,
    Stobj = 0x0081,
    Conv_Ovf_I1_Un = 0x0082,
    Conv_Ovf_I2_Un = 0x0083,
    Conv_Ovf_I4_Un = 0x0084,
    Conv_Ovf_I8_Un = 0x0085,
    Conv_Ovf_U1_Un = 0x0086,
    Conv_Ovf_U2_Un = 0x0087,
    Conv_Ovf_U4_Un = 0x0088,
    Conv_Ovf_U8_Un = 0x0089,
    Conv_Ovf_I_Un = 0x008a,
    Conv_Ovf_U_Un = 0x008b,
    Box = 0x008c,
    Newarr = 0x008d,
    Ldlen = 0x008e,
    Ldelema = 0x008f,
    Ldelem_I1 = 0x0090,
    Ldelem_U1 = 0x0091,
    Ldelem_I2 = 0x0092,
    Ldelem_U2 = 0x0093,
    Ldelem_I4 = 0x0094,
    Ldelem_U4 = 0x0095,
    Ldelem_I8 = 0x0096,
    Ldelem_I = 0x0097,
    Ldelem_R4 = 0x0098,
    Ldelem_R8 = 0x0099,
    Ldelem_Ref = 0x009a,
    Stelem_I = 0x009b,
    Stelem_I1 = 0x009c,
    Stelem_I2 = 0x009d,
    Stelem_I4 = 0x009e,
    Stelem_I8 = 0x009f,
    Stelem_R4 = 0x00a0,
    Stelem_R8 = 0x00a1,
    Stelem_Ref = 0x00a2,
    Ldelem = 0x00a3,
    Stelem = 0x00a4,
    Unbox_Any = 0x00a5,
    Conv_Ovf_I1 = 0x00b3,
    Conv_Ovf_U1 = 0x00b4,
    Conv_Ovf_I2 = 0x00b5,
    Conv_Ovf_U2 = 0x00b6,
    Conv_Ovf_I4 = 0x00b7,
    Conv_Ovf_U4 = 0x00b8,
    Conv_Ovf_I8 = 0x00b9,
    Conv_Ovf_U8 = 0x00ba,
    Refanyval = 0x00c2,
    Ckfinite = 0x00c3,
    Mkrefany = 0x00c6,
    Ldtoken = 0x00d0,
    Conv_U2 = 0x00d1,
    Conv_U1 = 0x00d2,
    Conv_I = 0x00d3,
    Conv_Ovf_I = 0x00d4,
    Conv_Ovf_U = 0x00d5,
    Add_Ovf = 0x00d6,
    Add_Ovf_Un = 0x00d7,
    Mul_Ovf = 0x00d8,
    Mul_Ovf_Un = 0x00d9,
    Sub_Ovf = 0x00da,
    Sub_Ovf_Un = 0x00db,
    Endfinally = 0x00dc,
    Leave = 0x00dd,
    Leave_S = 0x00de,
    Stind_I = 0x00df,
    Conv_U = 0x00e0,
    Prefix7 = 0x00f8,
    Prefix6 = 0x00f9,
    Prefix5 = 0x00fa,
    Prefix4 = 0x00fb,
    Prefix3 = 0x00fc,
    Prefix2 = 0x00fd,
    Prefix1 = 0x00fe,
    Prefixref = 0x00ff,
    Arglist = 0xfe00,
    Ceq = 0xfe01,
    Cgt = 0xfe02,
    Cgt_Un = 0xfe03,
    Clt = 0xfe04,
    Clt_Un = 0xfe05,
    Ldftn = 0xfe06,
    Ldvirtftn = 0xfe07,
    Ldarg = 0xfe09,
    Ldarga = 0xfe0a,
    Starg = 0xfe0b,
    Ldloc = 0xfe0c,
    Ldloca = 0xfe0d,
    Stloc = 0xfe0e,
    Localloc = 0xfe0f,
    Endfilter = 0xfe11,
    Unaligned = 0xfe12,
    Volatile = 0xfe13,
    Tailcall = 0xfe14,
    Initobj = 0xfe15,
    Constrained = 0xfe16,
    Cpblk = 0xfe17,
    Initblk = 0xfe18,
    Rethrow = 0xfe1a,
    Sizeof = 0xfe1c,
    Refanytype = 0xfe1d,
    Readonly = 0xfe1e,
}

/// <summary>
/// Provides extension methods for <see cref="OpCodeTypes"/>.
/// </summary>
[PublicAPI, GeneratedCode("TextTemplatingFileGenerator", "2.x")]
public static class OpCodeTypeExtensions
{
    /// <summary>
    /// Gets the <see cref="OpCodeTypes"/> for the given <see cref="OpCode"/>.
    /// </summary>
    public static OpCodeTypes Type(this OpCode opCode)
    {
        return (OpCodeTypes)opCode.Value;
    }
}

#pragma warning restore CS1591, CA1028, SA1602, RCS1035